{
  "version": 3,
  "sources": ["../../vuetify/src/composables/display.ts", "../../vuetify/src/iconsets/mdi.ts", "../../vuetify/src/composables/icons.tsx", "../../vuetify/src/composables/locale.ts", "../../vuetify/src/framework.ts"],
  "sourcesContent": ["// Utilities\nimport { inject, reactive, ref, toRefs, watchEffect } from 'vue'\nimport { mergeDeep } from '@/util'\n\n// Globals\nimport { IN_BROWSER, SUPPORTS_TOUCH } from '@/util/globals'\n\n// Types\nimport type { InjectionKey, ToRefs } from 'vue'\n\nexport type DisplayBreakpoint = keyof DisplayThresholds\n\nexport interface DisplayThresholds {\n  xs: number\n  sm: number\n  md: number\n  lg: number\n  xl: number\n  xxl: number\n}\n\nexport interface DisplayOptions {\n  mobileBreakpoint?: number | DisplayBreakpoint\n  thresholds?: Partial<DisplayThresholds>\n}\n\nexport interface InternalDisplayOptions {\n  mobileBreakpoint: number | DisplayBreakpoint\n  thresholds: DisplayThresholds\n}\n\nexport interface DisplayPlatform {\n  android: boolean\n  ios: boolean\n  cordova: boolean\n  electron: boolean\n  chrome: boolean\n  edge: boolean\n  firefox: boolean\n  opera: boolean\n  win: boolean\n  mac: boolean\n  linux: boolean\n  touch: boolean\n  ssr: boolean\n}\n\nexport interface DisplayInstance {\n  xs: boolean\n  sm: boolean\n  md: boolean\n  lg: boolean\n  xl: boolean\n  xxl: boolean\n  smAndUp: boolean\n  mdAndUp: boolean\n  lgAndUp: boolean\n  xlAndUp: boolean\n  smAndDown: boolean\n  mdAndDown: boolean\n  lgAndDown: boolean\n  xlAndDown: boolean\n  name: DisplayBreakpoint\n  height: number\n  width: number\n  mobile: boolean\n  mobileBreakpoint: number | DisplayBreakpoint\n  platform: DisplayPlatform\n  thresholds: DisplayThresholds\n}\n\nexport const DisplaySymbol: InjectionKey<ToRefs<DisplayInstance>> = Symbol.for('vuetify:display')\n\nconst defaultDisplayOptions: DisplayOptions = {\n  mobileBreakpoint: 'lg',\n  thresholds: {\n    xs: 0,\n    sm: 600,\n    md: 960,\n    lg: 1280,\n    xl: 1920,\n    xxl: 2560,\n  },\n}\n\nconst parseDisplayOptions = (options: DisplayOptions = defaultDisplayOptions) => {\n  return mergeDeep(defaultDisplayOptions, options) as InternalDisplayOptions\n}\n\nfunction getClientWidth (isHydrate?: boolean) {\n  return IN_BROWSER && !isHydrate\n    ? window.innerWidth\n    : 0\n}\n\nfunction getClientHeight (isHydrate?: boolean) {\n  return IN_BROWSER && !isHydrate\n    ? window.innerHeight\n    : 0\n}\n\nfunction getPlatform (): DisplayPlatform {\n  const userAgent = IN_BROWSER ? window.navigator.userAgent : 'ssr'\n\n  function match (regexp: RegExp) {\n    return Boolean(userAgent.match(regexp))\n  }\n\n  const android = match(/android/i)\n  const ios = match(/iphone|ipad|ipod/i)\n  const cordova = match(/cordova/i)\n  const electron = match(/electron/i)\n  const chrome = match(/chrome/i)\n  const edge = match(/edge/i)\n  const firefox = match(/firefox/i)\n  const opera = match(/opera/i)\n  const win = match(/win/i)\n  const mac = match(/mac/i)\n  const linux = match(/linux/i)\n  const ssr = match(/ssr/i)\n\n  return {\n    android,\n    ios,\n    cordova,\n    electron,\n    chrome,\n    edge,\n    firefox,\n    opera,\n    win,\n    mac,\n    linux,\n    touch: SUPPORTS_TOUCH,\n    ssr,\n  }\n}\n\nexport function createDisplay (options?: DisplayOptions, isHydrate?: boolean): ToRefs<DisplayInstance> {\n  const { thresholds, mobileBreakpoint } = parseDisplayOptions(options)\n\n  const height = ref(getClientHeight(isHydrate))\n  const platform = getPlatform()\n  const state = reactive({} as DisplayInstance)\n  const width = ref(getClientWidth(isHydrate))\n\n  function onResize () {\n    height.value = getClientHeight()\n    width.value = getClientWidth()\n  }\n\n  if (isHydrate && IN_BROWSER) {\n    requestAnimationFrame(() => onResize())\n  }\n\n  // eslint-disable-next-line max-statements\n  watchEffect(() => {\n    const xs = width.value < thresholds.sm\n    const sm = width.value < thresholds.md && !xs\n    const md = width.value < thresholds.lg && !(sm || xs)\n    const lg = width.value < thresholds.xl && !(md || sm || xs)\n    const xl = width.value < thresholds.xxl && !(lg || md || sm || xs)\n    const xxl = width.value >= thresholds.xxl\n    const name =\n      xs ? 'xs'\n      : sm ? 'sm'\n      : md ? 'md'\n      : lg ? 'lg'\n      : xl ? 'xl'\n      : 'xxl'\n    const breakpointValue = typeof mobileBreakpoint === 'number' ? mobileBreakpoint : thresholds[mobileBreakpoint]\n    const mobile = !platform.ssr\n      ? width.value < breakpointValue\n      : platform.android || platform.ios || platform.opera\n\n    state.xs = xs\n    state.sm = sm\n    state.md = md\n    state.lg = lg\n    state.xl = xl\n    state.xxl = xxl\n    state.smAndUp = !xs\n    state.mdAndUp = !(xs || sm)\n    state.lgAndUp = !(xs || sm || md)\n    state.xlAndUp = !(xs || sm || md || lg)\n    state.smAndDown = !(md || lg || xl || xxl)\n    state.mdAndDown = !(lg || xl || xxl)\n    state.lgAndDown = !(xl || xxl)\n    state.xlAndDown = !xxl\n    state.name = name\n    state.height = height.value\n    state.width = width.value\n    state.mobile = mobile\n    state.mobileBreakpoint = mobileBreakpoint\n    state.platform = platform\n    state.thresholds = thresholds\n  })\n\n  if (IN_BROWSER) {\n    window.addEventListener('resize', onResize, { passive: true })\n  }\n\n  return toRefs(state)\n}\n\nexport function useDisplay () {\n  const display = inject(DisplaySymbol)\n\n  if (!display) throw new Error('Could not find Vuetify display injection')\n\n  return display\n}\n", "// Utilities\nimport { h } from 'vue'\n\n// Components\nimport { VClassIcon } from '@/composables/icons'\n\n// Types\nimport type { IconAliases, IconSet } from '@/composables/icons'\n\nconst aliases: IconAliases = {\n  collapse: 'mdi-chevron-up',\n  complete: 'mdi-check',\n  cancel: 'mdi-close-circle',\n  close: 'mdi-close',\n  delete: 'mdi-close-circle', // delete (e.g. v-chip close)\n  clear: 'mdi-close-circle',\n  success: 'mdi-check-circle',\n  info: 'mdi-information',\n  warning: 'mdi-alert-circle',\n  error: 'mdi-close-circle',\n  prev: 'mdi-chevron-left',\n  next: 'mdi-chevron-right',\n  checkboxOn: 'mdi-checkbox-marked',\n  checkboxOff: 'mdi-checkbox-blank-outline',\n  checkboxIndeterminate: 'mdi-minus-box',\n  delimiter: 'mdi-circle', // for carousel\n  sort: 'mdi-arrow-up',\n  expand: 'mdi-chevron-down',\n  menu: 'mdi-menu',\n  subgroup: 'mdi-menu-down',\n  dropdown: 'mdi-menu-down',\n  radioOn: 'mdi-radiobox-marked',\n  radioOff: 'mdi-radiobox-blank',\n  edit: 'mdi-pencil',\n  ratingEmpty: 'mdi-star-outline',\n  ratingFull: 'mdi-star',\n  ratingHalf: 'mdi-star-half-full',\n  loading: 'mdi-cached',\n  first: 'mdi-page-first',\n  last: 'mdi-page-last',\n  unfold: 'mdi-unfold-more-horizontal',\n  file: 'mdi-paperclip',\n  plus: 'mdi-plus',\n  minus: 'mdi-minus',\n}\n\nconst mdi: IconSet = {\n  // Not using mergeProps here, functional components merge props by default (?)\n  component: (props: any) => h(VClassIcon, { ...props, class: 'mdi' }),\n}\n\nexport { aliases, mdi }\n", "// Icons\nimport { aliases, mdi } from '@/iconsets/mdi'\n\n// Utilities\nimport { computed, inject, isRef } from 'vue'\nimport { defineComponent, mergeDeep, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, JSXComponent, PropType, Ref } from 'vue'\n\nexport type IconValue = string | JSXComponent\nexport const IconValue = [String, Function, Object] as PropType<IconValue>\n\nexport interface IconAliases {\n  [name: string]: IconValue\n  complete: IconValue\n  cancel: IconValue\n  close: IconValue\n  delete: IconValue\n  clear: IconValue\n  success: IconValue\n  info: IconValue\n  warning: IconValue\n  error: IconValue\n  prev: IconValue\n  next: IconValue\n  checkboxOn: IconValue\n  checkboxOff: IconValue\n  checkboxIndeterminate: IconValue\n  delimiter: IconValue\n  sort: IconValue\n  expand: IconValue\n  menu: IconValue\n  subgroup: IconValue\n  dropdown: IconValue\n  radioOn: IconValue\n  radioOff: IconValue\n  edit: IconValue\n  ratingEmpty: IconValue\n  ratingFull: IconValue\n  ratingHalf: IconValue\n  loading: IconValue\n  first: IconValue\n  last: IconValue\n  unfold: IconValue\n  file: IconValue\n  plus: IconValue\n  minus: IconValue\n}\n\nexport interface IconProps {\n  tag: string\n  icon: IconValue\n  disabled?: Boolean\n}\n\ntype IconComponent = JSXComponent<IconProps>\n\nexport interface IconSet {\n  component: IconComponent\n}\n\nexport type IconOptions = {\n  defaultSet: string\n  aliases?: Partial<IconAliases>\n  sets: Record<string, IconSet>\n}\n\ntype IconInstance = {\n  component: IconComponent\n  icon: IconValue\n}\n\nexport const IconSymbol: InjectionKey<IconOptions> = Symbol.for('vuetify:icons')\n\nexport const makeIconProps = propsFactory({\n  icon: {\n    type: IconValue,\n    required: true,\n  },\n  // Could not remove this and use makeTagProps, types complained because it is not required\n  tag: {\n    type: String,\n    required: true,\n  },\n}, 'icon')\n\nexport const VComponentIcon = defineComponent({\n  name: 'VComponentIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return (\n        <props.tag>\n          <props.icon />\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport const VSvgIcon = defineComponent({\n  name: 'VSvgIcon',\n\n  inheritAttrs: false,\n\n  props: makeIconProps(),\n\n  setup (props, { attrs }) {\n    return () => {\n      return (\n        <props.tag { ...attrs } style={ null }>\n          <svg\n            class=\"v-icon__svg\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            role=\"img\"\n            aria-hidden=\"true\"\n          >\n            <path d={ props.icon as string }></path>\n          </svg>\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport const VLigatureIcon = defineComponent({\n  name: 'VLigatureIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return <props.tag>{ props.icon }</props.tag>\n    }\n  },\n})\n\nexport const VClassIcon = defineComponent({\n  name: 'VClassIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return <props.tag class={ props.icon }></props.tag>\n    }\n  },\n})\n\nexport const defaultSets: Record<string, IconSet> = {\n  svg: {\n    component: VSvgIcon,\n  },\n  class: {\n    component: VClassIcon,\n  },\n}\n\n// Composables\nexport function createIcons (options?: IconOptions) {\n  return mergeDeep({\n    defaultSet: 'mdi',\n    sets: {\n      ...defaultSets,\n      mdi,\n    },\n    aliases,\n  }, options)\n}\n\nexport const useIcon = (props: Ref<string | undefined> | { icon?: IconValue }) => {\n  const icons = inject(IconSymbol)\n\n  if (!icons) throw new Error('Missing Vuetify Icons provide!')\n\n  const iconData: Ref<IconInstance> = computed(() => {\n    const iconAlias = isRef(props) ? props.value : props.icon\n\n    if (!iconAlias) throw new Error('Icon value is undefined or null')\n\n    let icon: IconValue | undefined = iconAlias\n\n    if (typeof iconAlias === 'string' && iconAlias.includes('$')) {\n      icon = icons.aliases?.[iconAlias.slice(iconAlias.indexOf('$') + 1)]\n    }\n\n    if (!icon) throw new Error(`Could not find aliased icon \"${iconAlias}\"`)\n\n    if (typeof icon !== 'string') {\n      return {\n        component: VComponentIcon,\n        icon,\n      }\n    }\n\n    const iconSetName = Object.keys(icons.sets).find(\n      setName => typeof icon === 'string' && icon.startsWith(`${setName}:`)\n    )\n\n    const iconName = iconSetName ? icon.slice(iconSetName.length + 1) : icon\n    const iconSet = icons.sets[iconSetName ?? icons.defaultSet]\n\n    return {\n      component: iconSet.component,\n      icon: iconName,\n    }\n  })\n\n  return { iconData }\n}\n", "// Locales\nimport en from '@/locale/en'\n\n// Composables\nimport { createRtl, RtlSymbol } from '@/composables/rtl'\n\n// Utilities\nimport { computed, inject, provide, ref } from 'vue'\nimport { consoleError, consoleWarn, getObjectValueByPath } from '@/util'\n\n// Types\nimport type { RtlOptions } from '@/composables/rtl'\nimport type { App, InjectionKey, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport interface LocaleMessages {\n  [key: string]: LocaleMessages | string\n}\n\nexport interface LocaleOptions {\n  defaultLocale?: string\n  fallbackLocale?: string\n  messages?: LocaleMessages\n}\n\nexport interface LocaleProps {\n  locale?: string\n  fallbackLocale?: string\n  messages?: LocaleMessages\n}\n\nexport interface LocaleInstance {\n  current: Ref<string>\n  fallback: Ref<string>\n  messages: Ref<LocaleMessages>\n  t: (key: string, ...params: unknown[]) => string\n  n: (value: number) => string\n}\n\nexport interface LocaleAdapter {\n  createRoot: (app?: App) => LocaleInstance\n  getScope: () => LocaleInstance\n  createScope: (options?: LocaleProps) => LocaleInstance\n}\n\nexport const LocaleAdapterSymbol: InjectionKey<LocaleAdapter> = Symbol.for('vuetify:locale-adapter')\nexport const VuetifyLocaleSymbol: InjectionKey<LocaleInstance> = Symbol.for('vuetify:locale')\n\nexport function provideLocale (props?: LocaleProps) {\n  const adapter = inject(LocaleAdapterSymbol)\n\n  if (!adapter) throw new Error('[Vuetify] Could not find injected locale adapter')\n\n  return adapter.createScope(props)\n}\n\nexport function useLocale () {\n  const adapter = inject(LocaleAdapterSymbol)\n\n  if (!adapter) throw new Error('[Vuetify] Could not find injected locale adapter')\n\n  return adapter.getScope()\n}\n\nfunction isLocaleAdapter (x: any): x is LocaleAdapter {\n  return !!x && x.hasOwnProperty('getScope') && x.hasOwnProperty('createScope') && x.hasOwnProperty('createRoot')\n}\n\nexport function createLocale (\n  app: App,\n  options?: (LocaleOptions & RtlOptions) | (LocaleAdapter & RtlOptions),\n) {\n  const adapter = isLocaleAdapter(options) ? options : createDefaultLocaleAdapter(options)\n\n  function install (app: App) {\n    const instance = adapter.createRoot(app)\n    app.provide(RtlSymbol, createRtl(instance, options))\n  }\n\n  return { adapter, install }\n}\n\nconst LANG_PREFIX = '$vuetify.'\n\nconst replace = (str: string, params: unknown[]) => {\n  return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n    /* istanbul ignore next */\n    return String(params[+index])\n  })\n}\n\nconst createTranslateFunction = (\n  current: Ref<string>,\n  fallback: Ref<string>,\n  messages: Ref<LocaleMessages>,\n) => {\n  return (key: string, ...params: unknown[]) => {\n    if (!key.startsWith(LANG_PREFIX)) {\n      return replace(key, params)\n    }\n\n    const shortKey = key.replace(LANG_PREFIX, '')\n    const currentLocale = current.value && messages.value[current.value]\n    const fallbackLocale = fallback.value && messages.value[fallback.value]\n\n    let str: string = getObjectValueByPath(currentLocale, shortKey, null)\n\n    if (!str) {\n      consoleWarn(`Translation key \"${key}\" not found in \"${current.value}\", trying fallback locale`)\n      str = getObjectValueByPath(fallbackLocale, shortKey, null)\n    }\n\n    if (!str) {\n      consoleError(`Translation key \"${key}\" not found in fallback`)\n      str = key\n    }\n\n    if (typeof str !== 'string') {\n      consoleError(`Translation key \"${key}\" has a non-string value`)\n      str = key\n    }\n\n    return replace(str, params)\n  }\n}\n\nfunction createNumberFunction (current: Ref<string>, fallback: Ref<string>) {\n  return (value: number, options?: Intl.NumberFormatOptions) => {\n    const numberFormat = new Intl.NumberFormat([current.value, fallback.value], options)\n\n    return numberFormat.format(value)\n  }\n}\n\nexport function createDefaultLocaleAdapter (options?: LocaleOptions): LocaleAdapter {\n  const createScope = (options: {\n    current: MaybeRef<string>\n    fallback: MaybeRef<string>\n    messages: MaybeRef<LocaleMessages>\n  }) => {\n    const current = ref(options.current)\n    const fallback = ref(options.fallback)\n    const messages = ref(options.messages)\n\n    return {\n      current,\n      fallback,\n      messages,\n      t: createTranslateFunction(current, fallback, messages),\n      n: createNumberFunction(current, fallback),\n    }\n  }\n\n  return {\n    createRoot: app => {\n      const rootScope = createScope({\n        current: options?.defaultLocale ?? 'en',\n        fallback: options?.fallbackLocale ?? 'en',\n        messages: options?.messages ?? { en },\n      })\n\n      if (!app) throw new Error('[Vuetify] Could not find default app instance')\n\n      app.provide(VuetifyLocaleSymbol, rootScope)\n\n      return rootScope\n    },\n    getScope: () => {\n      const currentScope = inject(VuetifyLocaleSymbol)\n\n      if (!currentScope) throw new Error('[Vuetify] Could not find injected locale instance')\n\n      return currentScope\n    },\n    createScope: options => {\n      const currentScope = inject(VuetifyLocaleSymbol)\n\n      if (!currentScope) throw new Error('[Vuetify] Could not find injected locale instance')\n\n      const newScope = createScope({\n        current: computed(() => options?.locale ?? currentScope.current.value),\n        fallback: computed(() => options?.locale ?? currentScope.fallback.value),\n        messages: computed(() => options?.messages ?? currentScope.messages.value),\n      })\n\n      provide(VuetifyLocaleSymbol, newScope)\n\n      return newScope\n    },\n  }\n}\n", "// Composables\nimport { createDefaults, DefaultsSymbol } from '@/composables/defaults'\nimport { createDisplay, DisplaySymbol } from '@/composables/display'\nimport { createIcons, IconSymbol } from '@/composables/icons'\nimport { createLocale, LocaleAdapterSymbol } from '@/composables/locale'\nimport { createTheme, ThemeSymbol } from '@/composables/theme'\nimport { RtlSymbol } from '@/composables/rtl'\n\n// Utilities\nimport { defineComponent, getUid, mergeDeep } from '@/util'\nimport { reactive } from 'vue'\n\n// Types\nimport type { App, ComponentPublicInstance, InjectionKey } from 'vue'\nimport type { DefaultsOptions } from '@/composables/defaults'\nimport type { DisplayOptions } from '@/composables/display'\nimport type { IconOptions } from '@/composables/icons'\nimport type { LocaleAdapter, LocaleOptions } from '@/composables/locale'\nimport type { RtlOptions } from '@/composables/rtl'\nimport type { ThemeOptions } from '@/composables/theme'\n\nexport * from './composables'\n\nexport interface VuetifyOptions {\n  aliases?: Record<string, any>\n  blueprint?: Blueprint\n  components?: Record<string, any>\n  directives?: Record<string, any>\n  defaults?: DefaultsOptions\n  display?: DisplayOptions\n  theme?: ThemeOptions\n  icons?: IconOptions\n  locale?: (LocaleOptions & RtlOptions) | (LocaleAdapter & RtlOptions)\n  ssr?: boolean\n}\n\nexport interface Blueprint extends Omit<VuetifyOptions, 'blueprint'> {}\n\nexport function createVuetify (vuetify: VuetifyOptions = {}) {\n  const { blueprint, ...rest } = vuetify\n  const options = mergeDeep(blueprint, rest)\n  const {\n    aliases = {},\n    components = {},\n    directives = {},\n  } = options\n\n  const defaults = createDefaults(options.defaults)\n  const display = createDisplay(options.display, options.ssr)\n  const theme = createTheme(options.theme)\n  const icons = createIcons(options.icons)\n  const locale = createLocale(options.locale)\n\n  const install = (app: App) => {\n    for (const key in directives) {\n      app.directive(key, directives[key])\n    }\n\n    for (const key in components) {\n      app.component(key, components[key])\n    }\n\n    for (const key in aliases) {\n      app.component(key, defineComponent({\n        ...aliases[key],\n        name: key,\n        aliasName: aliases[key].name,\n      }))\n    }\n\n    theme.install(app)\n    locale.install(app)\n\n    app.provide(DefaultsSymbol, defaults)\n    app.provide(DisplaySymbol, display)\n    app.provide(ThemeSymbol, theme)\n    app.provide(IconSymbol, icons)\n    app.provide(LocaleAdapterSymbol, locale.adapter)\n\n    getUid.reset()\n\n    app.mixin({\n      computed: {\n        $vuetify () {\n          return reactive({\n            defaults: inject.call(this, DefaultsSymbol),\n            display: inject.call(this, DisplaySymbol),\n            theme: inject.call(this, ThemeSymbol),\n            icons: inject.call(this, IconSymbol),\n            locale: inject.call(this, LocaleAdapterSymbol),\n            rtl: inject.call(this, RtlSymbol),\n          })\n        },\n      },\n    })\n  }\n\n  return {\n    install,\n    defaults,\n    display,\n    theme,\n    icons,\n    locale: locale.adapter,\n  }\n}\n\nexport const version = __VUETIFY_VERSION__\ncreateVuetify.version = version\n\n// Vue's inject() can only be used in setup\nfunction inject (this: ComponentPublicInstance, key: InjectionKey<any> | string) {\n  const vm = this.$\n\n  const provides = vm.parent?.provides ?? vm.vnode.appContext?.provides\n\n  if (provides && (key as any) in provides) {\n    return provides[(key as string)]\n  }\n}\n"],
  "mappings": "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",
  "names": ["DisplaySymbol", "Symbol", "for", "defaultDisplayOptions", "mobileBreakpoint", "thresholds", "xs", "sm", "md", "lg", "xl", "xxl", "parseDisplayOptions", "options", "mergeDeep", "getClientWidth", "isHydrate", "IN_BROWSER", "window", "innerWidth", "getClientHeight", "innerHeight", "getPlatform", "userAgent", "navigator", "match", "regexp", "Boolean", "android", "ios", "cordova", "electron", "chrome", "edge", "firefox", "opera", "win", "mac", "linux", "ssr", "touch", "SUPPORTS_TOUCH", "createDisplay", "height", "ref", "platform", "state", "reactive", "width", "onResize", "value", "requestAnimationFrame", "watchEffect", "name", "breakpointValue", "mobile", "smAndUp", "mdAndUp", "lgAndUp", "xlAndUp", "smAndDown", "mdAndDown", "lgAndDown", "xlAndDown", "addEventListener", "passive", "toRefs", "useDisplay", "display", "inject", "Error", "aliases", "collapse", "complete", "cancel", "close", "delete", "clear", "success", "info", "warning", "error", "prev", "next", "checkboxOn", "checkboxOff", "checkboxIndeterminate", "delimiter", "sort", "expand", "menu", "subgroup", "dropdown", "radioOn", "radioOff", "edit", "ratingEmpty", "ratingFull", "ratingHalf", "loading", "first", "last", "unfold", "file", "plus", "minus", "mdi", "component", "props", "h", "VClassIcon", "class", "IconValue", "String", "Function", "Object", "IconSymbol", "Symbol", "for", "makeIconProps", "propsFactory", "icon", "type", "required", "tag", "VComponentIcon", "defineComponent", "name", "props", "setup", "VSvgIcon", "inheritAttrs", "attrs", "VLigatureIcon", "VClassIcon", "defaultSets", "svg", "component", "class", "createIcons", "options", "mergeDeep", "defaultSet", "sets", "mdi", "aliases", "LocaleAdapterSymbol", "Symbol", "for", "VuetifyLocaleSymbol", "useLocale", "adapter", "inject", "LocaleAdapterSymbol", "Error", "getScope", "isLocaleAdapter", "x", "hasOwnProperty", "createLocale", "app", "options", "createDefaultLocaleAdapter", "install", "instance", "createRoot", "provide", "RtlSymbol", "createRtl", "LANG_PREFIX", "replace", "str", "params", "match", "index", "String", "createTranslateFunction", "current", "fallback", "messages", "key", "startsWith", "shortKey", "currentLocale", "value", "fallbackLocale", "getObjectValueByPath", "consoleWarn", "consoleError", "createNumberFunction", "numberFormat", "Intl", "NumberFormat", "format", "createScope", "ref", "t", "n", "rootScope", "defaultLocale", "en", "VuetifyLocaleSymbol", "currentScope", "newScope", "computed", "locale", "createVuetify", "vuetify", "blueprint", "rest", "options", "mergeDeep", "aliases", "components", "directives", "defaults", "createDefaults", "display", "createDisplay", "ssr", "theme", "createTheme", "icons", "createIcons", "locale", "createLocale", "install", "app", "key", "directive", "component", "defineComponent", "name", "aliasName", "provide", "DefaultsSymbol", "DisplaySymbol", "ThemeSymbol", "IconSymbol", "LocaleAdapterSymbol", "adapter", "getUid", "reset", "mixin", "computed", "$vuetify", "reactive", "inject", "call", "rtl", "RtlSymbol", "version", "vm", "$", "provides", "parent", "vnode", "appContext"]
}
